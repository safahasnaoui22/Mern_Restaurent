{"version":3,"sources":["error.js"],"names":["ErrorHandler","message","statusCode","Error","errorHandler","err","req","res","next","status","json","success"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA,Y;;;;;AACF,wBAAYC,OAAZ,EAAsBC,UAAtB,EAAiC;AAAA;;AAAA;;AAC7B,sFAAMD,OAAN;AACA,UAAKC,UAAL,GAAkBA,UAAlB;AAF6B;AAGhC;;;mBAJsBC,K;;AAOpB,IAAMC,YAAY,GAAI,SAAhBA,YAAgB,CAACC,GAAD,EAAOC,GAAP,EAAaC,GAAb,EAAmBC,IAAnB,EAA2B;AACpDH,EAAAA,GAAG,CAACJ,OAAJ,GAAcI,GAAG,CAACJ,OAAJ,IAAe,qBAA7B;AACAI,EAAAA,GAAG,CAACH,UAAJ,GAAiBG,GAAG,CAACH,UAAJ,IAAkB,GAAnC;AACA,SAAOK,GAAG,CAACE,MAAJ,CAAWJ,GAAG,CAACH,UAAf,EAA2BQ,IAA3B,CAAgC;AACnCC,IAAAA,OAAO,EAAG,KADyB;AAEnCV,IAAAA,OAAO,EAAGI,GAAG,CAACJ;AAFqB,GAAhC,CAAP;AAIH,CAPM;;;eASQD,Y","sourcesContent":["class ErrorHandler extends Error{\r\n    constructor(message , statusCode){\r\n        super(message);\r\n        this.statusCode = statusCode\r\n    }\r\n}\r\n\r\nexport const errorHandler  = (err , req , res , next)=> {\r\n    err.message = err.message || \"internal server err\"\r\n    err.statusCode = err.statusCode || 500 ;\r\n    return res.status(err.statusCode).json({\r\n        success : false,\r\n        message : err.message,\r\n    })\r\n}\r\n\r\nexport default ErrorHandler"],"file":"error.dev.js"}