{"version":3,"sources":["index.js"],"names":["app","use","express","json","req","res","next","setHeader","get","send","ReservationRouter","mongoose","connect","then","console","log","error","ErrorHandler","PORT","process","env","listen"],"mappings":";;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQ,UAASG,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7BD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,uBAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wBAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,6BAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,kCAAd,EAAkD,MAAlD;AACAD,EAAAA,IAAI;AACP,CAND;AAOAN,GAAG,CAACQ,GAAJ,CAAQ,GAAR,EAAa,UAACJ,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACI,IAAJ,CAAS,iCAAT;AACH,CAFD;AAIAT,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA4BS,4BAA5B;;AAEAC,qBAASC,OAAT,CAAiB,uDAAjB,EACKC,IADL,CACU;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAN;AAAA,CADV,WAEW,UAACC,KAAD;AAAA,SAAWF,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CC,KAA7C,CAAX;AAAA,CAFX;;AAKIhB,GAAG,CAACC,GAAJ,CAAQgB,iBAAR;AAEJ;AAAC;;;;;;;;;AAQM;AAEP,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAlB,GAAG,CAACqB,MAAJ,CAAWH,IAAX,EAAiB,YAAM;AACnBJ,EAAAA,OAAO,CAACC,GAAR,gCAAoCG,IAApC;AACH,CAFD","sourcesContent":["\r\nimport express from 'express' \r\nimport mongoose from 'mongoose'\r\nimport cors from 'cors'\r\nimport ErrorHandler from './error/error.js';\r\nimport ReservationRouter from './routes/reservationRoute.js'\r\nconst app = express();\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(function(req, res, next) {\r\n    res.setHeader('Access-Control-Allow-Origin', 'http://localhost:5173');\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\r\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\r\n    res.setHeader('Access-Control-Allow-Credentials', 'true');\r\n    next();\r\n});\r\napp.get('/', (req, res) => {\r\n    res.send('Hello, welcome to the Nova API!');\r\n});\r\n\r\napp.use('/api/reservtion' , ReservationRouter)\r\n\r\nmongoose.connect('mongodb+srv://nova:nova@cluster0.haxquto.mongodb.net/')\r\n    .then(() => console.log('Connected to MongoDB'))\r\n    .catch((error) => console.log('Failed to connect to MongoDB:', error));\r\n\r\n\r\n    app.use(ErrorHandler)\r\n\r\n{/** app.use((err, req, res, next) => {\r\n    err.statusCode = err.statusCode || 500;\r\n    err.status = err.status || 'error';\r\n\r\n    res.status(err.statusCode).json({\r\n        status: err.status,\r\n        message: err.message,\r\n    });\r\n}); */}\r\n\r\nconst PORT = process.env.PORT || 8080;\r\napp.listen(PORT, () => {\r\n    console.log(`Nova Running on port ${PORT}`);\r\n});\r\n"],"file":"index.dev.js"}