{"version":3,"sources":["index.js"],"names":["_express","_interopRequireDefault","require","_mongoose","_cors","_error","_reservationRoute","app","use","express","json","req","res","next","setHeader","ReservationRouter","mongoose","connect","get","console","error","log","ErrorHandler","PORT","process","env","listen","concat"],"mappings":"aACA,IAAAA,SAAAC,uBAAAC,QAAA,YAAAC,UAAAF,uBAAAC,QAAA,aAEAE,MAAAH,uBAAAC,QAAA,SADAG,OAAAJ,uBAAAC,QAAA,qBAGAI,kBAAAL,uBAAAC,QAAA,yGAFA,IAAAK,KAAA,EAAAP,SAAA,WACAO,IAAAC,KAAA,EAAAJ,MAAA,YAKAG,IAAIC,IAAIC,SAAAA,QAAQC,QAJhBH,IAAAC,IAAA,SAAAG,EAAAC,EAAAC,GAMID,EAAIE,UAAU,8BAA+B,yBAC7CF,EAAIE,UAAU,+BAAgC,0BAC9CF,EAAIE,UAAU,+BAAgC,+BAP5CP,EAAGO,UAAG,mCAAZ,QAEIN,MAEJD,IAAIC,IAAI,IAAA,SAAAG,EAASA,GACbC,EAAIE,KAAAA,qCAGJF,IAAAA,IAAIE,kBAAUC,kBAAAA,SAEjBC,UAAAA,QANDC,QAAA,yDAOIC,KAAI,WAAA,OAAKC,QAACR,IAAKC,0BADlB,MAEY,SAAAQ,GAAA,OAAAD,QAAAE,IAAA,gCAATD,KAUAb,IAAIC,IAAIc,OAAAA,SAYZ,IAAMC,KAAOC,QAAQC,IAAIF,MAAQ,KACjChB,IAAImB,OAAOH,KAAM,WACbJ,QAAQE,IAAR,wBAAAM,OAAoCJ","file":"index.min.js","sourcesContent":["\r\nimport express from 'express' \r\nimport mongoose from 'mongoose'\r\nimport cors from 'cors'\r\nimport ErrorHandler from './error/error.js';\r\nimport ReservationRouter from './routes/reservationRoute.js'\r\nconst app = express();\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(function(req, res, next) {\r\n    res.setHeader('Access-Control-Allow-Origin', 'http://localhost:5173');\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\r\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\r\n    res.setHeader('Access-Control-Allow-Credentials', 'true');\r\n    next();\r\n});\r\napp.get('/', (req, res) => {\r\n    res.send('Hello, welcome to the Nova API!');\r\n});\r\n\r\napp.use('/api/reservtion' , ReservationRouter)\r\n\r\nmongoose.connect('mongodb+srv://nova:nova@cluster0.haxquto.mongodb.net/')\r\n    .then(() => console.log('Connected to MongoDB'))\r\n    .catch((error) => console.log('Failed to connect to MongoDB:', error));\r\n\r\n\r\n    app.use(ErrorHandler)\r\n\r\n{/** app.use((err, req, res, next) => {\r\n    err.statusCode = err.statusCode || 500;\r\n    err.status = err.status || 'error';\r\n\r\n    res.status(err.statusCode).json({\r\n        status: err.status,\r\n        message: err.message,\r\n    });\r\n}); */}\r\n\r\nconst PORT = process.env.PORT || 8080;\r\napp.listen(PORT, () => {\r\n    console.log(`Nova Running on port ${PORT}`);\r\n});\r\n"]}