{"version":3,"sources":["resarvationasachema.js"],"names":["_mongoose","_interopRequireDefault","require","_validator","reservationSchema","mongoose","Schema","firstName","type","String","required","minLength","maxLength","lastName","validator","isEmail","email","date","Resarvation","model"],"mappings":"+FAAA,IAAAA,UAAAC,uBAAAC,QAAA,aACAC,WAAAF,uBAAAC,QAAA,sFAEA,IAAME,kBAAoB,IAAIC,UAAAA,QAASC,OAAO,CAC1CC,UAAY,CACRC,KAAOC,OACPC,UAAW,EANnBC,UAAA,CAAA,EAAA,mDAQQC,UAAY,CAAC,GAAK,4CAGtBC,SAAW,CACPL,KAAOC,OATTL,UAAAA,EACFG,UAAY,CAAA,EAAA,iDACJK,UADI,CAAA,GAAA,0CAGRD,MAAAA,CACAC,KAAYH,OAL0BC,UAAA,EAQ1CG,SAAW,CAAAC,WAAAA,QAAAC,QAAA,0BAEPL,MAAQ,CACRC,KAAYF,OACZG,UAAY,GAEhBI,KAAQ,CACAR,KAAGC,OACPC,UAFI,GAdkCO,KAAA,CAmBrCT,KAAGC,OACAC,UADA,KAIDQ,YAAAb,UAAAA,QAAAc,MAAA,cAAAf","file":"resarvationasachema.min.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport validator from 'validator'\r\n\r\nconst reservationSchema = new mongoose.Schema({\r\n    firstName : {\r\n        type : String ,\r\n        required : true ,\r\n        minLength : [3 , \"first name must contain at least 3 characters !\"],\r\n        maxLength : [30 , \"First name cannot be more than 30 char \"]\r\n    },\r\n\r\n    lastName : {\r\n        type : String ,\r\n        required : true ,\r\n        minLength : [3 , \"lastName must contain at least 3 characters !\"],\r\n        maxLength : [30 , \"lastName cannot be more than 30 char \"]\r\n    },\r\n    email : {\r\n        type : String ,\r\n        required : true ,\r\n        validate : [validator.isEmail , \"Provide a valid email\"]\r\n    }, \r\n    phone : {\r\n        type : String ,\r\n        required : true ,\r\n    },\r\n    time : {\r\n        type : String ,\r\n        required : true,\r\n    },\r\n    date : {\r\n        type : String ,\r\n        required : true,\r\n    },\r\n})\r\nexport const Resarvation = mongoose.model(\"Resarvation\" , reservationSchema )"]}